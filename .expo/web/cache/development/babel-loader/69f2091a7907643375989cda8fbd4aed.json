{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chat = _useState4[0],\n    setChat = _useState4[1];\n  useEffect(function () {\n    var unsubscribe = db.collection(\"chats\").onSnapshot(function (snapshot) {\n      return [];\n    });\n  });\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \" Add a new Chat\",\n      headerBackTitle: \" Chats\"\n    });\n  }, [navigation]);\n  var createChat = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield db.collection(\"chats\").add({\n        chatName: input\n      }).then(function () {\n        navigation.goBack();\n      }).catch(function (error) {\n        return alert(error);\n      });\n    });\n    return function createChat() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Input, {\n      placeholder: \"Enter a chat name\",\n      value: input,\n      onChangeText: function onChangeText(text) {\n        return setInput(text);\n      },\n      onSubmitEditing: createChat,\n      leftIcon: _jsx(Icon, {\n        name: \"wechat\",\n        type: \"antdesign\",\n        size: 24,\n        color: \"black\"\n      })\n    }), _jsx(Button, {\n      onPress: createChat,\n      title: \"Create a new Chat\"\n    })]\n  });\n};\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","Input","Button","Icon","db","AddChatScreen","navigation","input","setInput","chat","setChat","unsubscribe","collection","onSnapshot","snapshot","setOptions","title","headerBackTitle","createChat","add","chatName","then","goBack","catch","error","alert","styles","container","text","StyleSheet","create","backgroundColor","padding","height"],"sources":["/Users/aliozer/Desktop/SÄ±gnal/Signal-Clone/screens/AddChatScreen.js"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { db } from \"../firebase\";\nconst AddChatScreen = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  \n  useEffect(()=>{\n\nconst unsubscribe=db.collection(\"chats\").onSnapshot(snapshot=>[])\n  })\n\n\n\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \" Add a new Chat\",\n      headerBackTitle: \" Chats\",\n    });\n  }, [navigation]);\n\n  const createChat = async () => {\n    await db\n      .collection(\"chats\")\n      .add({\n        chatName: input,\n      })\n      .then(() => {\n        navigation.goBack();\n      })\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Input\n        placeholder=\"Enter a chat name\"\n        value={input}\n        onChangeText={(text) => setInput(text)}\n        onSubmitEditing={createChat}\n        leftIcon={\n          <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\n        }\n      />\n      <Button onPress={createChat} title=\"Create a new Chat\" />\n    </View>\n  );\n};\n\nexport default AddChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\",\n  },\n});\n"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,KAAK,EAAEC,MAAM,QAAQ,uBAAuB;AACrD,OAAOC,IAAI;AACX,SAASC,EAAE;AAAsB;AAAA;AACjC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EACjC,gBAA0BN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BO,KAAK;IAAEC,QAAQ;EACtB,iBAAwBR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BS,IAAI;IAAEC,OAAO;EAEpBZ,SAAS,CAAC,YAAI;IAEhB,IAAMa,WAAW,GAACP,EAAE,CAACQ,UAAU,CAAC,OAAO,CAAC,CAACC,UAAU,CAAC,UAAAC,QAAQ;MAAA,OAAE,EAAE;IAAA,EAAC;EAC/D,CAAC,CAAC;EAKFf,eAAe,CAAC,YAAM;IACpBO,UAAU,CAACS,UAAU,CAAC;MACpBC,KAAK,EAAE,iBAAiB;MACxBC,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,IAAMY,UAAU;IAAA,8BAAG,aAAY;MAC7B,MAAMd,EAAE,CACLQ,UAAU,CAAC,OAAO,CAAC,CACnBO,GAAG,CAAC;QACHC,QAAQ,EAAEb;MACZ,CAAC,CAAC,CACDc,IAAI,CAAC,YAAM;QACVf,UAAU,CAACgB,MAAM,EAAE;MACrB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK;QAAA,OAAKC,KAAK,CAACD,KAAK,CAAC;MAAA,EAAC;IACnC,CAAC;IAAA,gBAVKN,UAAU;MAAA;IAAA;EAAA,GAUf;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEQ,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,KAAK;MACJ,WAAW,EAAC,mBAAmB;MAC/B,KAAK,EAAEpB,KAAM;MACb,YAAY,EAAE,sBAACqB,IAAI;QAAA,OAAKpB,QAAQ,CAACoB,IAAI,CAAC;MAAA,CAAC;MACvC,eAAe,EAAEV,UAAW;MAC5B,QAAQ,EACN,KAAC,IAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,WAAW;QAAC,IAAI,EAAE,EAAG;QAAC,KAAK,EAAC;MAAO;IAC7D,EACD,EACF,KAAC,MAAM;MAAC,OAAO,EAAEA,UAAW;MAAC,KAAK,EAAC;IAAmB,EAAG;EAAA,EACpD;AAEX,CAAC;AAED,eAAeb,aAAa;AAE5B,IAAMqB,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}